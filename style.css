/* Normalization styles ===================================================== */
/* Some taken from moden-normalize https://github.com/sindresorhus/modern-normalize/ */

*, 
::before,
::after {
    box-sizing: border-box;
}

html {
    font-family: var(--font-stack);
    --font-stack: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    --picture-width: min(538px, 35%); /* Avoid it overtaking the screen with a cap of 35% */
    --x-padding-card: 50px;
    --form-lightgreen: #485945;
    --form-darkgreen: #374833;
    --box-shadow-color: gray;
    --help-msg-size: 0.80rem;
}

body {
    margin: 0;
}

p {
    line-height: 1.5; /* note (a) */
    width: clamp(45ch, 100%, 75ch); /* note (b) */
    /* (a) Accessibility guideline per MDN: https://developer.mozilla.org/en-US/docs/Web/CSS/line-height */
    /* (b) For a comfortable line length: https://web.dev/articles/min-max-clamp#width */
}

button,
input,
optgroup,
select,
textarea {
    font-family: inherit;
    margin: 0;
}

/* Main styling starts here ================================================= */

body {
    display: flex;
}

/* Left side ================================================================ */

#left-side-container {
    position: relative;
    width: var(--picture-width);
    background-image: url(./assets/banner-full.jpg);
    background-size: cover;
    background-position-x: left;
    color: white;
    overflow: hidden; /* Hide overflow on large zooms */
}

#left-side-container > footer {
    position: absolute; 
    bottom: 20px;
    width: 100%; /* (note) */
    text-align: center;
    /* (note) <footer> is typically a block element but abs positioning removes 
    it from document flow, so its width needs to be manually set. */
}

#left-side-container a:any-link {
    color: inherit;
}

#logo-container {
    position: relative;
    top: 100px;
    background-color: rgb(0,0,0, 0.5);
    height: 20%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 25px;
}

#logo-img {
    height: 40%;
}

#logo-text {
    font-family: "Imperial Script", cursive, var(--font-stack);
    text-shadow: #FFAC33 1px 0 10px; /* dominant color of the sunflower logo */
    font-size: 5rem;
    font-weight: normal;
}

/* Right side =============================================================== */

#right-side-container {
    width: calc(100% - var(--picture-width));
    background-color: #F9FAFB;
}

#right-side-container h1 {
    font-size: 24px; /* Font size of a h2. h1 tag is used for semantics. */ 
}

.info-card {
    padding: 25px var(--x-padding-card);
}

#registration-form {
    padding: var(--x-padding-card) var(--x-padding-card); 
    background-color: white;
    box-shadow: var(--box-shadow-color) 0 0 22px -6px;
}

.form-row {
    display: flex;
    gap: 100px;
    margin-bottom: var(--form-row-margin-bottom);   
    --form-row-margin-bottom: 25px;
}

.form-row:nth-last-child(2) {
    margin-bottom: calc(2 * var(--form-row-margin-bottom));
}

.form-cell {
    width: 260px; 
    min-width: 12ch; /* Allow forms a min size on large zooms */

    /* Note: This implemention is different from `width: max(260px, 12ch)`.
    After all, max(260px, 12ch) in the end is just a number able to be overrided
    by flex computations, bypassing the 12ch "minimum", where as `min-width` is 
    a hard set minimum. */
}

ul.form-list {
    list-style-type: none;
    margin: 0;
    padding-left: 0;
}

ul.form-list > li + li { /* Ignores first <li> */
    margin-top: 10px; 
}

/* Lay out the form inputs and labels (no interactivity yet) ================ */
/* ========================================================================== */

label {
    display: block;
    margin: 0 0 12px;
}

label[for$="-terms"], /* Used the $ sign for practice :3 */
label[for$="-newsletter"] {
    display: inline-block;
    margin: 0; /* Both checkboxes should be close together */
    cursor: pointer;
}

label[for="form-terms"] > a {
    color: initial;
}

label[for="form-newsletter"]::after {
    content: "✉️";
}

input:not([type="checkbox"]) {
    width: 100%;
    height: 32px;
    padding: 2px 8px;
    font-size: 1rem;
    border: 1px solid #DBDBDB;
    border-radius: 6px;
}

input[type="password"] {
    letter-spacing: 0.1rem; /* Increase space between the dots for visibility */
}

input[type="checkbox"] {
    cursor: pointer; 
}

#form-register-btn {
    cursor: pointer;
    background-color: var(--form-lightgreen);
    color: white;
    box-shadow: var(--box-shadow-color) 0 0 22px -6px;
    border: none;
    border-radius: 8px;
    padding: 12px 24px;
    font-size: 1.2rem;
    font-weight: bold;
}

#form-login-link {
    color: var(--form-lightgreen);
    font-weight: bold;
    text-decoration: none;
}

/* Interactivity for the form controls ====================================== */
/* ========================================================================== */

input:not([type="checkbox"]):focus {
    outline-offset: 6px; /* Add a noticeable ring around focused fields */
    outline-color: #3D67DD; 
    box-shadow: 1px 1px 3px var(--box-shadow-color); 
    outline-style: solid; /* (note) */
    /* (note) Necessary for Firefox to apply the custom outline-color */
}

input:not([type="checkbox"]):user-invalid {
    border-color: red; 
}

label:has(+ input:user-invalid) > span[aria-label="required"],
label:has(> input:user-invalid) > span[aria-label="required"] {
    color: red;
    font-weight: bold;
}

.has-help-msg {
    text-overflow: visible;
    text-wrap: nowrap;
    display: inline-block; /* (note) */
    width: 1ch; /* (note) */
    /* (note) block display & width needed for overflow & nowrap to apply */
}

.has-help-msg:has(+ input:user-invalid) > span[aria-label="required"]::after {
    font-size: var(--help-msg-size);
    font-weight: initial;
}

label[for="form-email"]:has(+ input:user-invalid) > span[aria-label="required"]::after {
    content: " Format: joe@example.com";
}

label[for="form-password"]:has(+ input:required:user-invalid) > span[aria-label="required"]::after,
label[for="form-password-confirm"]:has(+ input:required:user-invalid) > span[aria-label="required"]::after {
    content: " Must be at least 8 characters long";
} 

#form-register-btn:hover {
    background-color: var(--form-darkgreen);
}

#form-login-link:hover {
    color: var(--form-darkgreen);
}